//Health Bonus Pulse
event HudHealthBonusPulse
{
	//normal
	Animate	PlayerStatusHealthBonusImageSpec 	"fgcolor"		"0 0 0 0"			Linear 0.0 0.0
	Animate	PlayerStatusHealthBonusImageSpec 	"fgcolor"		"0 0 0 0"			Linear 0.0 0.0


	
	Animate PlayerStatusHealthValue 		FgColor 	"HP Buff" 	Linear 0.0 0.0
	Animate PlayerStatusHealthValueSpec 	FgColor 	"HP Buff" 	Linear 0.0 0.0
	Animate PlayerStatusHealthValueSpecgui 	FgColor 	"HP Buff" 	Linear 0.0 0.0
	Animate PlayerStatusHealthValueFreezePanel 	FgColor 	"HP Buff" 	Linear 0.0 0

	
	RunEvent HudHealthBonusPulseLoop	0.4
}

// call to loop HudHealthBonusPulse
event HudHealthBonusPulseLoop
{
	RunEvent HudHealthBonusPulse 0.0
}

event HudHealthBonusPulseStop
{
	StopEvent HudHealthBonusPulse 0.0
	StopEvent HudHealthBonusPulseLoop 0.0
	Animate PlayerStatusHealthValue 			FgColor 		"HP" 		Accel 0.0 0.0
	Animate PlayerStatusHealthValueSpec 		FgColor 		"HP" 		Accel 0.0 0.0
	Animate PlayerStatusHealthValueSpecgui 		FgColor 		"HP" 		Accel 0.0 0.0
	Animate PlayerStatusHealthValueFreezePanel  FgColor 		"HP" 		Accel 0.0 0.0
}

//===========================================

//Health Dying Pulse
event HudHealthDyingPulse
{
	//normal
	Animate	PlayerStatusHealthBonusImage 	Alpha		"255"		Linear 0.0 0.075
	Animate	PlayerStatusHealthBonusImage 	Alpha		"0"			Linear 0.125 0.075
	
	Animate PlayerStatusHealthValue 			FgColor 	"HP Low" 	Linear 0.0 0.075
	Animate PlayerStatusHealthValueSpec			FgColor		"HP Low"	Linear 0.0 0.075
	Animate PlayerStatusHealthValueSpecgui		FgColor 	"HP Low" 	Linear 0.0 0.075
	Animate PlayerStatusHealthValueFreezePanel	FgColor 	"HP Low" 	Linear 0.0 0.075
	
	
	RunEvent HudHealthDyingPulseLoop	0.25
}

// call to loop HudHealthDyingPulse
event HudHealthDyingPulseLoop
{
	RunEvent HudHealthDyingPulse 0.0
}

event HudHealthDyingPulseStop
{
	StopEvent HudHealthDyingPulse 0.0
	StopEvent HudHealthDyingPulseLoop 0.0
	Animate PlayerStatusHealthValue 			FgColor 		"HP" 		Accel 0.0 0.0
	Animate PlayerStatusHealthValueSpec			FgColor 		"HP" 		Accel 0.0 0.0
	Animate PlayerStatusHealthValueSpecgui		FgColor 		"HP" 		Accel 0.0 0.0
	Animate PlayerStatusHealthValueFreezePanel  FgColor 		"HP" 		Accel 0.0 0.0

}

//===========================================

event HudLowAmmoPulse
{
	//Animate	HudWeaponLowAmmoImage		Alpha		"255"		Linear 0.0 0.075
	//Animate	HudWeaponLowAmmoImage		Alpha		"0"			Linear 0.125 0.075

	
	Animate AmmoInClip FgColor "LowAmmo1" Linear 0.0 0.075
	Animate AmmoInClip FgColor "LowAmmo2" Linear 0.125 0.075
	
	Animate AmmoInReserve FgColor "LowAmmo1" Linear 0.0 0.075
	Animate AmmoInReserve FgColor "LowAmmo2" Linear 0.125 0.075
	
	Animate AmmoNoClip FgColor "LowAmmo1" Linear 0.0 0.075
	Animate AmmoNoClip FgColor "LowAmmo2" Linear 0.125 0.075
	
	RunEvent HudLowAmmoPulseLoop	0.25	//0.4 for box
}

// call to loop HudLowAmmoPulse
event HudLowAmmoPulseLoop
{
	RunEvent HudLowAmmoPulse 0.0
}

event HudLowAmmoPulseStop
{
	StopEvent HudLowAmmoPulse 0.0
	StopEvent HudLowAmmoPulseLoop 0.0

	
	Animate AmmoInClip 		FgColor 		"Ammo In Clip" 			Linear 0.0 0.0
	Animate AmmoInReserve 	FgColor 		"Ammo In Reserve" 		Linear 0.0 0.0
	Animate AmmoNoClip 		FgColor 		"Ammo No Clip" 			Linear 0.0 0.0
}

//===========================================

// Flash the medic charge hud when we have full charge

event HudMedicCharged
{
	Animate	ChargeLabel 		FgColor		"255 0 0 255"			Linear 0.0 0.2
	Animate	ChargeLabel 		FgColor		"255 150 0 255"			Linear 0.2 0.2
	Animate	ChargeLabel 		FgColor		"255 255 0 255"			Linear 0.4 0.2
	Animate	ChargeLabel 		FgColor		"0 255 0 255"			Linear 0.6 0.2
	Animate	ChargeLabel 		FgColor		"0 0 255 0"				Linear 0.8 0.2
	Animate	ChargeLabel 		FgColor		"255 0 255 255"			Linear 1.0 0.2

	Animate	ChargeMeter 		FgColor		"255 0 0 255"			Linear 0.0 0.2
	Animate	ChargeMeter 		FgColor		"255 150 0 255"			Linear 0.2 0.2
	Animate	ChargeMeter 		FgColor		"255 255 0 255"			Linear 0.4 0.2
	Animate	ChargeMeter 		FgColor		"0 255 0 255"			Linear 0.6 0.2
	Animate	ChargeMeter 		FgColor		"0 0 255 0"				Linear 0.8 0.2
	Animate	ChargeMeter 		FgColor		"255 0 255 255"			Linear 1.0 0.2
	
	Animate	ChargeLabelMin 		FgColor		"255 0 0 255"			Linear 0.0 0.2
	Animate	ChargeLabelMin 		FgColor		"255 150 0 255"			Linear 0.2 0.2
	Animate	ChargeLabelMin 		FgColor		"255 255 0 255"			Linear 0.4 0.2
	Animate	ChargeLabelMin 		FgColor		"0 255 0 255"			Linear 0.6 0.2
	Animate	ChargeLabelMin		FgColor		"0 0 255 0"				Linear 0.8 0.2
	Animate	ChargeLabelMin		FgColor		"255 0 255 255"			Linear 1.0 0.2

	RunEvent HudMedicChargedLoop	0.6
}

// call to loop HudHealthBonusPulse
event HudMedicChargedLoop
{
	RunEvent HudMedicCharged 0.0
}

event HudMedicChargedStop
{
	StopEvent HudMedicCharged 		0.0
	StopEvent HudMedicChargedLoop 	0.0
	
	Animate	ChargeMeter 	FgColor		"Ubercharge Meter"		Linear 0.0 0.0001
	Animate ChargeLabel 	FgColor 	"ChargePercent" 		Linear 0.0 0.0001
	Animate ChargeLabelMin 	FgColor 	"Green" 				Linear 0.0 0.0001

}

//===========================================

event DamagedPlayer
{
	Animate KnucklesCrosses	 	FgColor 	"CrosshairDamage" 		Linear 0.0 0.0
	Animate KnucklesCrosses	 	FgColor 	"Crosshair" 			Linear 0.15 0.0
	
	// The colors for CrosshairDamage and Crosshair can be changed under custom
	// colors in clientscheme.res in the resource folder. Alternatively, you can
	// use RGBA. 

}

//===========================================

event HudSpyDisguiseChanged
{

	Animate PlayerStatusSpyOutlineImage	Alpha	"255"	Linear 0.0 0.2

	Animate PlayerStatusSpyOutlineImage	Position	"c-100 c50"	Linear 0.0 0.2
	Animate PlayerStatusSpyOutlineImage	Size	"150 150"	Linear 0.0 0.2

	RunEvent HudSpyDisguiseHide	0.7

	}

event HudSpyDisguiseHide

{
	Animate PlayerStatusSpyOutlineImage	Position	"c-50 c105"	Linear 0.0 0.2
	Animate PlayerStatusSpyOutlineImage	Size	"55 55"	Linear 0.0 0.2

	Animate PlayerStatusSpyOutlineImage	Alpha	"0"	Linear 0.2 0.1

}

//===========================================

event MMenu_PlayList_Expand
{
	// empty
}

event MMenu_PlayList_Collapse
{
	// empty
}

event MMenu_PlayList_Collapse_Immediate
{
	// empty
}